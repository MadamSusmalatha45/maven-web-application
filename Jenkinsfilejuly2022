node{
def mavenHome = tool name: "maven-3.8.6"
echo "Jenkins url is :${env.JENKINS_URL}"
echo "Node Name is:${env.NODE_NAME}"
echo "Job Name is:${env.JOB_NAME}"
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
try{
slackNotifications('STARTED')

stage('CheckOutCode')
{
git branch: 'development', credentialsId: 'e13ed881-05cf-42b1-8e83-34f666d66921', url: 'https://github.com/MadamSusmalatha45/maven-web-application.git'

}

stage('Build')
{
sh "${mavenHome}/bin/mvn clean package"
}
stage('ExecuteSonarQubeReport')
{
sh "${mavenHome}/bin/mvn clean sonar:sonar"
}
/*
stage('UploadArtifactsIntoArtifactoryRepo')
{
sh "${mavenHome}/bin/mvn clean deploy"
}
stage('DeployAppIntoTomcatServer')
{
sshagent(['88d42484-ca54-4d16-969e-3679400e920b']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@43.205.230.57:/opt/apache-tomcat-9.0.65/webapps/"
}}*/
}//try closing
catch (e){
slackNotifications('FAILED')
throw e
}
finally{
slackNotifications(currentBuild.result)
}

}//Node closing
//code Snippet for sending slackNotifications.
def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName= 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#walmart")
}
